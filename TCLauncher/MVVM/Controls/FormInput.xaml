<UserControl x:Class="TCLauncher.MVVM.Controls.FormInput"
             x:Name="LocalFormInput"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:TCLauncher.MVVM.Converters"
             xmlns:local="clr-namespace:TCLauncher.MVVM.Controls"
             mc:Ignorable="d" 
             d:DesignWidth="800"
             d:Background="White">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:InvertibleBooleanToVisibilityConverter x:Key="InvertibleBooleanToVisibilityConverter" />
            <converters:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
            <converters:RequiredFieldTextConverter x:Key="RequiredFieldTextConverter" />

            <Style TargetType="PasswordBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#afb3b6" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="10 8" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="Border"
                                    CornerRadius="5"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ElementName=LocalFormInput, Path=AccentHoverColor}" />
                                </Trigger>

                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#afb3b6" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="10 8" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="Border"
                                    CornerRadius="5"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ElementName=LocalFormInput, Path=AccentHoverColor}" />
                                </Trigger>

                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                                </Trigger>

                                <!-- Custom Checks -->
                                <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                                   Value="False" />
                                        <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}"
                                                   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=TextColor}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="10 8" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border CornerRadius="3"
                                                Padding="10 8"
                                                Margin="2"
                                                Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Background" Value="{Binding ElementName=LocalFormInput, Path=AccentContrastColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Border x:Name="Border"
                                                        Grid.Column="0"
                                                        CornerRadius="5"
                                                        Background="{Binding ElementName=LocalFormInput, Path=BackgroundColor}"
                                                        BorderBrush="{Binding ElementName=LocalFormInput, Path=AccentBlurColor}"
                                                        BorderThickness="1" />
                                                <Border x:Name="SpacingBorder"
                                                        Grid.Column="0"
                                                        CornerRadius="5,0,0,5"
                                                        Margin="1"
                                                        Background="Transparent"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ElementName=LocalFormInput, Path=AccentHoverColor}" />
                                                </Trigger>
                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=TextColor}" />
                                            <Setter Property="Padding" Value="10 9" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox"
                                         Visibility="Hidden"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                Background="{Binding ElementName=LocalFormInput, Path=BackgroundColorSolid}"
                                                BorderBrush="{Binding ElementName=LocalFormInput, Path=AccentColor}"
                                                BorderThickness="1"
                                                CornerRadius="5" />
                                        <ScrollViewer SnapsToDevicePixels="True">
                                            <ScrollViewer.Resources>
                                                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                    <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentContrastColor}" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="Margin" Value="0 8 3 8" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid x:Name="GridRoot"
                                                                      Width="8"
                                                                      Background="{TemplateBinding Background}">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="0.00001*" />
                                                                    </Grid.RowDefinitions>

                                                                    <Track x:Name="PART_Track"
                                                                           Grid.Row="0"
                                                                           IsDirectionReversed="True"
                                                                           Focusable="False">
                                                                        <Track.Thumb>
                                                                            <Thumb x:Name="Thumb"
                                                                                   Background="{TemplateBinding Foreground}"
                                                                                   Style="{DynamicResource ScrollThumb}" />
                                                                        </Track.Thumb>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton x:Name="PageUp"
                                                                                          Command="ScrollBar.PageDownCommand"
                                                                                          Opacity="0"
                                                                                          Focusable="False" />
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton x:Name="PageDown"
                                                                                          Command="ScrollBar.PageUpCommand"
                                                                                          Opacity="0"
                                                                                          Focusable="False" />
                                                                        </Track.DecreaseRepeatButton>
                                                                    </Track>
                                                                </Grid>

                                                                <ControlTemplate.Triggers>
                                                                    <Trigger SourceName="Thumb" Property="IsMouseOver" Value="True">
                                                                        <Setter Value="#CCD3DBF2" TargetName="Thumb" Property="Background" />
                                                                    </Trigger>
                                                                    <Trigger SourceName="Thumb" Property="IsDragging" Value="True">
                                                                        <Setter Value="#FFD3DBF2" TargetName="Thumb" Property="Background" />
                                                                    </Trigger>

                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                                                    </Trigger>
                                                                    <Trigger Property="Orientation" Value="Horizontal">
                                                                        <Setter TargetName="GridRoot" Property="LayoutTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="-90" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="PART_Track" Property="LayoutTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="-90" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="Width" Value="Auto" />
                                                                        <Setter Property="Height" Value="12" />
                                                                        <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                                                        <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                                                        <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>

                                                <Style TargetType="Thumb">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Grid x:Name="Grid">
                                                                    <Rectangle HorizontalAlignment="Stretch"
                                                                               VerticalAlignment="Stretch"
                                                                               Width="Auto"
                                                                               Height="Auto"
                                                                               Fill="Transparent" />
                                                                    <Border x:Name="Rectangle1"
                                                                            CornerRadius="4"
                                                                            HorizontalAlignment="Stretch"
                                                                            VerticalAlignment="Stretch"
                                                                            Width="Auto"
                                                                            Height="Auto"
                                                                            Background="{TemplateBinding Background}" />
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="Tag" Value="Horizontal">
                                                                        <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                                                        <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ScrollViewer.Resources>

                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel>
        <TextBlock x:Name="CaptionBlock"
                   FontSize="12"
                   Margin="0 0 0 5"
                   MouseDown="CaptionBlock_OnMouseDown">
            <TextBlock.Text>
                <MultiBinding Converter="{StaticResource RequiredFieldTextConverter}">
                    <Binding ElementName="LocalFormInput" Path="Caption" />
                    <Binding ElementName="LocalFormInput" Path="IsRequired" />
                </MultiBinding>
            </TextBlock.Text>

            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                           Value="True" />
                                <Condition Binding="{Binding ElementName=PasswordBox, Path=IsFocused}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                           Value="True" />
                                <Condition Binding="{Binding ElementName=PasswordBox, Path=IsFocused}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentBlurColor}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=TextBox, Path=IsFocused}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                           Value="False" />
                                <Condition Binding="{Binding ElementName=TextBox, Path=IsFocused}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentBlurColor}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}"
                                           Value="True" />
                                <Condition Binding="{Binding ElementName=ComboBox, Path=IsDropDownOpen}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentColor}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}"
                                           Value="True" />
                                <Condition Binding="{Binding ElementName=ComboBox, Path=IsDropDownOpen}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{Binding ElementName=LocalFormInput, Path=AccentBlurColor}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}" Value="True">
                            <Setter Property="Cursor" Value="Arrow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}" Value="False">
                            <Setter Property="Cursor" Value="IBeam" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
            <TextBlock x:Name="HintBlock"
                       Margin="12 0"
                       VerticalAlignment="Center"
                       Foreground="#8d8d8d"
                       IsHitTestVisible="False"
                       Panel.ZIndex="1"
                       FontSize="13"
                       Text="{Binding ElementName=LocalFormInput, Path=Hint}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                               Value="True" />
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=Password.Length, Converter={StaticResource GreaterThanZeroConverter}}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                               Value="True" />
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=Password.Length, Converter={StaticResource GreaterThanZeroConverter}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                               Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBox, Path=Text.IsEmpty}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=LocalFormInput, Path=IsPassword}"
                                               Value="False" />
                                    <Condition Binding="{Binding ElementName=TextBox, Path=Text.IsEmpty}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=IsComboBox}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->

            <TextBox x:Name="TextBox" />
            <PasswordBox x:Name="PasswordBox"
                         PasswordChanged="OnPasswordChanged"
                         Visibility="{Binding ElementName=LocalFormInput, Path=IsPassword, Converter={StaticResource InvertibleBooleanToVisibilityConverter}}" />
            <ComboBox x:Name="ComboBox"
                      ItemsSource="{Binding ElementName=LocalFormInput, Path=ComboBoxItems}"
                      Visibility="{Binding ElementName=LocalFormInput, Path=IsComboBox, Converter={StaticResource InvertibleBooleanToVisibilityConverter}}" />
        </Grid>
        <TextBlock Text="{Binding ElementName=LocalFormInput, Path=RequirementCaption}"
                   FontSize="12"
                   FontStyle="Italic"
                   Foreground="{Binding ElementName=LocalFormInput, Path=RequirementCaptionColor}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=LocalFormInput, Path=RequirementCaption}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </StackPanel>
</UserControl>
